<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <IsPackable>false</IsPackable>

        <!-- Avoid ID conflicts with the package project. -->
        <PackageId>*$(MSBuildProjectFile)*</PackageId>
        <LangVersion>default</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="2.9.8">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.3.1" />
        <PackageReference Include="OpenCover" Version="4.7.922" />
    </ItemGroup>

    <ItemGroup>
        <Compile Update="SymbolicExecutionStrings.Designer.cs">
            <DesignTime>True</DesignTime>
            <AutoGen>True</AutoGen>
            <DependentUpon>SymbolicExecutionStrings.resx</DependentUpon>
        </Compile>
    </ItemGroup>

    <ItemGroup>
        <EmbeddedResource Update="SymbolicExecutionStrings.resx">
            <Generator>PublicResXFileCodeGenerator</Generator>
            <LastGenOutput>SymbolicExecutionStrings.Designer.cs</LastGenOutput>
        </EmbeddedResource>
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\..\SymbolicExecution.SourceGenerator\SymbolicExecution.SourceGenerator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="SyntaxTreeToNodeAnalysisInfoConverter\SyntaxNodes" />
    </ItemGroup>

</Project>
