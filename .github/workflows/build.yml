name: Run tests and SonarScanner analysis
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarscanner:
    name: SonarScanner
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Setup .NET 5
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '5.0'
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"twtduck_symbolicexecution" /o:"twtduck" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build SymbolicExecution/SymbolicExecution.Test
          dotnet test
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
  coverage:
    name: Coverage
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - name: Build
        run: |
          dotnet build SymbolicExecution/SymbolicExecution.Test --configuration Debug
      - name: Run tests gathering coverage
        run: |
          ./coverage.ps1
      - name: Upload coverage data
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrest.CODECOV }}
          files: ./coverage.xml
          flags: unittests,integrationtests
          verbose: true
          fail_ci_if_error: true

        
